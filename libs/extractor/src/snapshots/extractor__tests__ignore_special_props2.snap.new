---
source: libs/extractor/src/lib.rs
assertion_line: 236
expression: "ToBTreeSet::from(extract(\"test.tsx\",\nr#\"import {Box as DevupButton} from '@devup-ui/core'\n        <DevupButton\n      _active={\n        {\n          primary: {\n            bg: `color-mix(in srgb, var(--primary, #674DC7) 100%, #000 30%)`,\n          },\n          default: {\n            bg: `color-mix(in srgb, var(--primary, #8163E1) 20%, #FFF 80%)`,\n            border: `1px solid var(--primary, #8163E1)`,\n            color: '#000',\n          },\n        }[variant]\n      }\n      _disabled={\n        {\n          primary: {\n            color: '#D6D7DE',\n            bgColor: '#F0F0F3',\n            cursor: 'not-allowed',\n          },\n          default: {\n            color: '#D6D7DE',\n            bgColor: '#F0F0F3',\n            cursor: 'not-allowed',\n            borderColor: 'var(--border, #E4E4E4)',\n          },\n        }[variant]\n      }\n      _focusVisible={{\n        outline: '2px solid',\n        outlineColor: 'var(--primaryFocus, #9385D3)',\n      }}\n      _hover={\n        {\n          primary: {\n            bg: `color-mix(in srgb, var(--primary, #674DC7) 100%, #000 15%)`,\n          },\n          default: {\n            borderColor: `var(--primary, #8163E1)`,\n            bg: `color-mix(in srgb, var(--primary, #8163E1) 10%, #FFF 90%)`,\n          },\n        }[variant]\n      }\n      _themeDark={{\n        _active: {\n          primary: {\n            bg: `color-mix(in srgb, var(--primary, #8163E1) 100%, #FFF 30%);`,\n          },\n          default: {\n            bg: 'var(--primary, #8163E1)',\n            color: 'var(--text, #F6F6F6)',\n          },\n        }[variant],\n        _disabled: {\n          primary: {\n            color: '#373737',\n            bgColor: '#47474A',\n            borderColor: 'transparent',\n          },\n          default: {\n            color: '#373737',\n            bgColor: '#47474A',\n            borderColor: 'transparent',\n          },\n        }[variant],\n        _hover: {\n          primary: {\n            bg: `color-mix(in srgb, var(--primary, #8163E1) 100%, #FFF 15%);`,\n            outlineColor: `var(--primary, #674DC7)`,\n          },\n          default: {\n            borderColor: `var(--primary, #8163E1)`,\n            bg: `color-mix(in srgb, var(--primary, #674DC7) 10%, var(--inputBackground, #2E2E2E) 90%)`,\n          },\n        }[variant],\n        _focusVisible: {\n          outlineColor: 'var(--primaryFocus, #927CE4)',\n        },\n      }}\n      aria-disabled={props.disabled}\n      aria-label=\"button\"\n      bg={\n        {\n          primary: 'var(--primary, #8163E1)',\n          default: 'var(--inputBackground, #FFF)',\n        }[variant]\n      }\n      border={\n        {\n          primary: 'none',\n          default: '1px solid var(--border, #E4E4E4)',\n        }[variant]\n      }\n      borderRadius={\n        {\n          primary: '8px',\n          default: '10px',\n        }[variant]\n      }\n      boxSizing=\"border-box\"\n    //   className={clsx(\n    //     isError && variant === 'default' && errorClassNames,\n    //     className,\n    //   )}\n      className={className}\n      color={\n        {\n          primary: '#FFF',\n          default: 'var(--text, #272727)',\n        }[variant]\n      }\n      cursor=\"pointer\"\n      fontSize={variant === 'default' && ['14px', null, null, null, '15px']}\n      fontWeight={700}\n      letterSpacing={\n        variant === 'default' && ['-0.02em', null, null, null, '-0.03em']\n      }\n      outlineOffset=\"2px\"\n      pos=\"relative\"\n      px=\"40px\"\n      py=\"12px\"\n      styleOrder={1}\n      styleVars={{\n        primary: colors?.primary,\n        error: colors?.error,\n        text: colors?.text,\n        border: colors?.border,\n        inputBackground: colors?.inputBackground,\n        primaryFocus: colors?.primaryFocus,\n      }}\n      transition=\".25s\"\n      type={type}\n      typography={typography}\n      // {...props}\n    >\n      <Box maxW=\"100%\" mx=\"auto\" pos=\"relative\" w=\"fit-content\">\n        {icon && (\n          <Center\n            boxSize=\"24px\"\n            left=\"4px\"\n            pos=\"absolute\"\n            role=\"presentation\"\n            selectors={{\n              '&>svg': {\n                color: 'inherit',\n              },\n            }}\n            top=\"50%\"\n            transform=\"translate(-100%, -50%)\"\n          >\n            {icon}\n          </Center>\n        )}\n        <Box\n          className={clsx(ellipsis && buttonTextEllipsis)}\n          lineHeight=\"1.2\"\n          minH=\"1.2em\"\n          transform={!!icon && 'translateX(8px)'}\n        >\n          {children}\n        </Box>\n      </Box>\n    </DevupButton>\n        \"#,\nExtractOption\n{ package: \"@devup-ui/core\".to_string(), css_file: None }).unwrap())"
---
ToBTreeSet {
    styles: {
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#674DC7) 10%,var(--inputBackground,#2E2E2E) 90%)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#674DC7) 100%,#000 15%)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#674DC7) 100%,#000 30%)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#8163E1) 10%,#FFF 90%)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#8163E1) 100%,#FFF 15%)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#8163E1) 100%,#FFF 30%)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "color-mix(in srgb,var(--primary,#8163E1) 20%,#FFF 80%)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "var(--inputBackground,#FFF)",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "var(--primary,#8163E1)",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "background",
                value: "var(--primary,#8163E1)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "backgroundColor",
                value: "#47474A",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "backgroundColor",
                value: "#F0F0F3",
                level: 0,
                selector: Some(
                    Selector(
                        "&:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "border",
                value: "1px solid var(--border,#E4E4E4)",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "border",
                value: "1px solid var(--primary,#8163E1)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "border",
                value: "none",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "borderColor",
                value: "transparent",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "borderColor",
                value: "var(--border,#E4E4E4)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "borderColor",
                value: "var(--primary,#8163E1)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "borderRadius",
                value: "10px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "borderRadius",
                value: "8px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "boxSizing",
                value: "border-box",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "#000",
                level: 0,
                selector: Some(
                    Selector(
                        "&:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "#373737",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "#D6D7DE",
                level: 0,
                selector: Some(
                    Selector(
                        "&:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "#FFF",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "var(--text,#272727)",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "color",
                value: "var(--text,#F6F6F6)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:active",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "cursor",
                value: "not-allowed",
                level: 0,
                selector: Some(
                    Selector(
                        "&:disabled",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "cursor",
                value: "pointer",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "fontSize",
                value: "14px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "fontSize",
                value: "15px",
                level: 4,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "fontWeight",
                value: "700",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "letterSpacing",
                value: "-0.02em",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "letterSpacing",
                value: "-0.03em",
                level: 4,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "outline",
                value: "2px solid",
                level: 0,
                selector: Some(
                    Selector(
                        "&:focus-visible",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "outlineColor",
                value: "var(--primary,#674DC7)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:hover",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "outlineColor",
                value: "var(--primaryFocus,#927CE4)",
                level: 0,
                selector: Some(
                    Selector(
                        ":root[data-theme=dark] &:focus-visible",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "outlineColor",
                value: "var(--primaryFocus,#9385D3)",
                level: 0,
                selector: Some(
                    Selector(
                        "&:focus-visible",
                    ),
                ),
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "outlineOffset",
                value: "2px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "position",
                value: "relative",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "px",
                value: "40px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "py",
                value: "12px",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
        Static(
            ExtractStaticStyle {
                property: "transition",
                value: ".25s",
                level: 0,
                selector: None,
                style_order: Some(
                    1,
                ),
            },
        ),
    },
    code: "import \"@devup-ui/core/devup-ui.css\";\n<div aria-disabled={props.disabled} aria-label=\"button\" type={type} className={`${className || \"\"} d8 d9 d23 d30 d33 d36 d39 d40 d41 d42 d43 ${{\n\t\"default\": \"d0 d1 d2\",\n\t\"primary\": \"d3\"\n}[variant]}`} style={{\n\t\"--primary\": colors?.primary,\n\t\"--error\": colors?.error,\n\t\"--text\": colors?.text,\n\t\"--border\": colors?.border,\n\t\"--inputBackground\": colors?.inputBackground,\n\t\"--primaryFocus\": colors?.primaryFocus\n}}>\n      <Box maxW=\"100%\" mx=\"auto\" pos=\"relative\" w=\"fit-content\">\n        {icon && <Center boxSize=\"24px\" left=\"4px\" pos=\"absolute\" role=\"presentation\" selectors={{ \"&>svg\": { color: \"inherit\" } }} top=\"50%\" transform=\"translate(-100%, -50%)\">\n            {icon}\n          </Center>}\n        <Box className={clsx(ellipsis && buttonTextEllipsis)} lineHeight=\"1.2\" minH=\"1.2em\" transform={!!icon && \"translateX(8px)\"}>\n          {children}\n        </Box>\n      </Box>\n    </div>;\n",
}
